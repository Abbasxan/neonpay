name: 📚 Documentation

on:
  push:
    branches: ["main"]
    paths:
      - "docs/**"
      - "neonpay/**"
      - "README.md"
      - "pyproject.toml"
  pull_request:
    branches: ["main"]
    paths:
      - "docs/**"
      - "neonpay/**"
      - "README.md"
      - "pyproject.toml"
  workflow_dispatch: {}

jobs:
  build-docs:
    name: 📖 Build Documentation
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 💾 Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-docs-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-docs-
            ${{ runner.os }}-pip-

      - name: 📦 Install documentation tools
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install sphinx sphinx-rtd-theme sphinx-autodoc-typehints myst-parser

      - name: 🔍 Check documentation syntax
        run: |
          python -c "import neonpay; print('✅ neonpay imports successfully')"

      - name: 📚 Build documentation
        run: |
          cd docs
          make html
          make linkcheck || echo "Link check failed, continuing..."

      - name: 📊 Upload documentation artifacts
        uses: actions/upload-artifact@v4
        with:
          name: github-pages
          path: docs/_build/html/

  deploy-docs:
    name: 🚀 Deploy Documentation
    runs-on: ubuntu-latest
    needs: build-docs
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      pages: write
      id-token: write
    
    environment:
      name: github-pages
    
    steps:
      - name: 🚀 Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  docs-quality:
    name: 📋 Documentation Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: 📦 Install quality tools
        run: |
          python -m pip install --upgrade pip
          pip install doc8 sphinx-lint

      - name: 🔍 Check documentation quality
        run: |
          # Check README
          echo "Checking README.md..."
          if [ -f "README.md" ]; then
            echo "✅ README.md exists"
          else
            echo "❌ README.md missing"
            exit 1
          fi
          
          # Check for broken links in documentation
          echo "Checking for broken links..."
          find docs/ -name "*.md" -exec grep -l "http" {} \; | head -5

      - name: 📊 Generate documentation metrics
        run: |
          echo "# 📊 Documentation Metrics" > docs-metrics.md
          echo "" >> docs-metrics.md
          echo "## File Counts" >> docs-metrics.md
          echo "- Python files: $(find neonpay/ -name '*.py' | wc -l)" >> docs-metrics.md
          echo "- Documentation files: $(find docs/ -name '*.md' | wc -l)" >> docs-metrics.md
          echo "- Example files: $(find examples/ -name '*.py' | wc -l)" >> docs-metrics.md
          echo "" >> docs-metrics.md
          echo "## Coverage" >> docs-metrics.md
          echo "- Functions documented: $(grep -r 'def ' neonpay/ | wc -l)" >> docs-metrics.md
          echo "- Classes documented: $(grep -r 'class ' neonpay/ | wc -l)" >> docs-metrics.md

      - name: 📈 Upload documentation metrics
        uses: actions/upload-artifact@v4
        with:
          name: docs-metrics
          path: docs-metrics.md
