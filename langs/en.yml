# language.py
only_admins_can_change: "Change language? Only admins! Others obey silently."
group_language_changed: "✅ Group language changed to: {language}. As QƏDDAR commands!"
language_name: "English 🇬🇧"
change_language: "🔄 Please select your language:"
language_changed: "✅ Language successfully changed!\n\n📌 Press /start to begin."


#antivulgar.py
no_delete_permission: "I can't delete profanity without permission. Without admin rights, I'm powerless. Seriously!"
warn_group_with_user: "{user}, watch your language in this group! Profanity is FORBIDDEN!"
warn_private: "Obscene words on my radar! Speak properly, or QƏDDAR will find you!"
vulqar_warn_private: "You thought I didn't see? Inappropriate words are on QƏDDAR's target. Get yourself together."
admin_warning: "You're an admin, but that doesn't save you! Violators can't escape QƏDDAR!"
complaint_received: "Complaint registered. Forwarded to administrators. Let's go!"
no_violations: "Clean! No one has broken the rules. No one on QƏDDAR's radar!"
violations_header: "Violations list:"
violations_line: "User: {user_name} — Violations: {count}"
no_recent_violations: "No violations in the last 30 days. All quiet for now. Nothing on QƏDDAR's radar."
recent_violations_header: "Violators in the last 30 days:"
recent_violations_line: "User: {user_name} — Date: {date}"
reply_to_reset_warning: "To reset a violation, reply to that user, dear admin! By QƏDDAR's order."
not_admin: "You don't have authority for this command. QƏDDAR doesn't recognize you!"
warning_reset: "Warnings for {user} have been reset. A new page opened! By QƏDDAR's rules."
no_warnings: "This user has no warnings. Stayed clean! Want to protect yourself from QƏDDAR?"
database_reset_success: "All data reset. QƏDDAR knows how to clean!"
mute_message: "{user}, for obscenity you're muted for 24 hours. Let this be a lesson! QƏDDAR's muting power."
report_format_error: "Complaint written incorrectly. /complain @user Write why you're complaining!"
admin_only: "This command can only be used by administrators. By QƏDDAR's decree!"
antivulgar_set_success: "✅ Profanity settings updated. Limit: {count}, Mute: {duration} min. QƏDDAR's rules applied!"
antivulgar_set_fail: "Usage: /noarqo [on|off|status] or /noarqo [limit] [min]. QƏDDAR's instructions."
antivulgar_enabled: "Anti-vulgar filter activated. QƏDDAR is always ready!"
antivulgar_disabled: "Anti-vulgar filter deactivated. But remember, QƏDDAR can return at any moment!"
antivulgar_status: "🛡 <b>Anti-vulgar Settings</b>:\nStatus: <b>{status}</b>\nLimit: <b>{limit}</b> warnings\nMute: <b>{mute}</b> minutes\nMute mode: <b>{mute_mode}</b>"
antivulgar_status_active: "Active"
antivulgar_status_inactive: "Inactive"
antivulgar_mute_enabled: "Mute mode activated."
antivulgar_mute_disabled: "Mute mode deactivated."
auto_unmuted: "{mention} automatically unmuted. QƏDDAR gives second chances!"
noarqo_usage: "Usage: /noarqo [on/off/status] — QƏDDAR's rules against profanity!"
noarqo_enabled: "✅ Profanity filter activated. QƏDDAR on guard!"
noarqo_disabled: "❌ Profanity filter deactivated. But remember, QƏDDAR can return at any moment!"
noarqo_status: "Profanity filter status: {status}. QƏDDAR is still waiting!"

# antispam.py
admin_only: "This command can only be used by administrators."

antispam_enabled: "AntiSpam activated."
antispam_disabled: "AntiSpam deactivated."
antispam_status: "🛡 AntiSpam Status: {status}\nLimit: {limit} warnings\nMute: {mute} minutes"
antispam_usage: "Usage: /antispam on|off or /antispam [limit] [min]"

antispam_set_success: "✅ Spam settings updated.\nLimit: {count}\nMute: {duration} min"
antispam_set_fail: "Usage:\n/antispam on|off\n/antispam [limit] [min]"

antispam_status: |
  🛡 <b>AntiSpam Settings:</b>
  Status: {status}
  Limit: {limit} warnings
  Mute: {mute} minutes

antispam_usage: |
  <b>AntiSpam usage rules:</b>

  <code>/antispam on</code> – Activate filter
  <code>/antispam off</code> – Deactivate filter
  <code>/antispam 3 60</code> – Limit 3 warnings, 60 minutes mute
  <code>/antispam</code> – Show current settings

user_muted: "{user} muted for {duration} min (reason: spam)."
no_delete_permission: "I can't delete the message. No admin permission."
spam_warn_private: "You received a warning for sharing unauthorized links."
spam_warn_group_with_user: "{user}, you shared an unauthorized link. This has been noted by QƏDDAR."
spam_mute_fail: "{user}, mute failed. QƏDDAR warned — this time."
day: "daily"
hour: "hourly" 
minute: "minute"
spam_mute_message: "{user}, you have been muted for {duration} for sharing unauthorized links. QƏDDAR doesn't forgive rule breakers."
mute_fail: "{user}, I couldn't mute you due to technical reasons. But remember, QƏDDAR never loses track. You got away with a warning this time."
warn_group_no_mute: "Message deleted. Mute is not active, but QƏDDAR watched and warned."

antispam_admin_warn: "⚠️ Qəddar warns: {user} even as admin, advertising is not allowed!"
antispam_user_warn: "🚫 {user} posted advertising, and Qəddar responded immediately!"
antispam_dm_warn: "You posted advertising in <b>{group}</b> group. This is unacceptable to Qəddar!"
click_me_btn: "Click me"

# unmute.py
auto_unmuted: "{mention} has been unmuted. Speak now, but be careful!"

# New keys for help.py
help_commands_title: "📌 Commands and usage"

help_general_title: "🗣 GENERAL"
help_general_start: "Start the bot"
help_general_help: "Help menu"
help_general_lang: "Change language"

help_antivulgar_title: "🛡 ANTI-PROFANITY"
help_antivulgar_toggle: "Toggle profanity filter"
help_antivulgar_limit: "Set limit and time"
help_antivulgar_status: "Show current status"

help_antispam_title: "🛡 ANTISPAM"
help_antispam_toggle: "Toggle spam filter"
help_antispam_limit: "Limit and muting"
help_antispam_status: "Show current settings"

help_antireklam_title: "🛡 ANTI-ADVERTISING"
help_antireklam_toggle: "Toggle advertising filter"
help_antireklam_status: "Show current status"
help_antireklam_note: "This module also deletes advertising messages from other bots via userbot."

help_antiflood_title: "🛡 ANTI-FLOOD"
help_antiflood_toggle: "Toggle flood filter"
help_antiflood_settings: "Set limit and action"
help_antiflood_status: "Show current settings"
help_antiflood_note: "Automatically manages users sending messages too quickly."

help_report_title: "📊 REPORTS AND COMPLAINTS"
help_report_group: "Group violations report"
help_report_user: "User report"
help_report_complain: "Complain about user"

help_main_menu: "📚 Help Menu"
help_select_module: "Which module would you like to learn about?"
help_back_button: "🔙 Back"
help_general_button: "🗣 General"
help_antivulgar_button: "🛡 AntiProfanity"
help_antispam_button: "🛡 AntiSpam"
help_antireklam_button: "🛡 AntiAd"
help_antiflood_button: "🛡 AntiFlood"
help_report_button: "📊 Reports"
help_admin_button: "⚙️ Admin"

# help.py
bot_help_title: "Qaddar Bot - Help Menu"
help_main_description: "Use the buttons below to get detailed information about each module."
help_select_modules: "Select modules and get detailed information! 👇"
help_general_commands: "General Commands"
help_general_start_desc: "Starts the bot"
help_general_help_desc: "Shows help menu"
help_general_lang_desc: "To change language"
help_general_id_desc: "Shows user and group ID"
help_general_info_desc: "Information about user"
help_general_note: "These commands are available to all users."
help_antivulgar_features: "Features:"
help_antivulgar_feature1: "Automatically detects profanity words"
help_antivulgar_feature2: "Applies mute for repeated violations"
help_antivulgar_feature3: "Does not touch admin messages"
help_antivulgar_feature4: "Multilingual support (AZ, RU, EN)"
help_antivulgar_note: "Only admins can configure."
help_antispam_features: "Features:"
help_antispam_feature1: "Detects repeated identical messages"
help_antispam_feature2: "Automatically deletes spam bots"
help_antispam_feature3: "Individual spam limits"
help_antispam_feature4: "Applies temporary mute"
help_antispam_note: "Increases group security."
help_antireklam_features: "Features:"
help_antireklam_feature1: "Detects all types of links (http, t.me, @username)"
help_antireklam_feature2: "Deletes both user and bot advertisements"
help_antireklam_feature3: "Deletes bot messages via userbot"
help_antireklam_feature4: "Protects admin messages"
help_antireklam_feature5: "Automatic userbot invitation"
help_antireklam_note: "The strongest advertising protection!"
help_antiflood_actions: "Action types:"
help_antiflood_action1: "delete - Deletes messages"
help_antiflood_action2: "warn - Gives warning"
help_antiflood_action3: "mute - Temporarily mutes"
help_antiflood_action_type: "Action type"
help_antiflood_note: "Protects from spam flood."
help_warnings_title: "Warning System"
help_warnings_features: "Features:"
help_warnings_feature1: "Automatic admin notification"
help_warnings_feature2: "Warning counter"
help_warnings_feature3: "Reason registration"
help_warnings_feature4: "Date and time registration"
help_warnings_note: "Ensures group discipline."
help_reports_title: "Report System"
help_reports_stats: "Statistics:"
help_reports_stat1: "Number of deleted messages"
help_reports_stat2: "Warning statistics"
help_reports_stat3: "Violation types"
help_reports_stat4: "Most active violators"
help_reports_stat5: "30-day report"
help_reports_group_stats: "General group statistics"
help_reports_user_report: "User report"
help_reports_note: "Only admins can see."
help_admin_title: "Admin Commands"
help_admin_commands: "Main commands:"
help_admin_command1: "/mute @user duration - Mutes user"
help_admin_command2: "/unmute @user - Cancels mute"
help_admin_command3: "/ban @user - Bans user"
help_admin_command4: "/unban @user - Cancels ban"
help_admin_command5: "/kick @user - Kicks user"
help_admin_note2: "Automatic time calculation and scheduler support."
help_admin_note: "These commands are only for administrators. They are important for group management and security."
help_example: "Example"
help_mute_title: "🔈 MUTING"
help_mute_note: "For example: to set mute for 60 min after 3 violations: /noarqo 3 60 or /antispam 3 60"
help_warning_title: "🧹 COMPLAINTS AND WARNINGS"
help_warning_complain: "Complain about user"
help_warning_reports: "List of violations"
help_warning_resetwarn: "Reset for one user"
help_warning_resetall: "Delete all group data"
help_captcha_title: "Captcha Module"
help_captcha_features: "Features:"
help_captcha_feature1: "Mathematical captcha for new members"
help_captcha_feature2: "Automatic restriction until captcha is solved"
help_captcha_feature3: "Configurable time limit"
help_captcha_feature4: "Automatic mute on failed attempt"
help_captcha_feature5: "Multilingual support"
help_captcha_feature6: "Security event logging"
help_captcha_toggle: "Activate/deactivate captcha system"
help_captcha_timeout: "Set time limit (30-600 seconds)"
help_captcha_status: "Show current status"
help_captcha_types: "Captcha types:"
help_captcha_type1: "Addition (5 + 3 = ?)"
help_captcha_type2: "Subtraction (8 - 2 = ?)"
help_captcha_type3: "Multiplication (4 × 3 = ?)"
help_captcha_note: "Security system for new member verification."
help_error: "An error occurred!"

# moderator.py
mute_no_target: "❌ Please specify who to mute.\n\n<b>Usage:</b>\n/mute @user time\n/mute ID time\n/mute (reply to message) time"
mute_success: "🔇 {mention} has been muted for {duration}."
mute_failed: "❌ Could not mute the user."
unmute_no_target: "❌ Please specify whose mute to remove.\n\n<b>Usage:</b>\n/unmute @user\n/unmute ID\n/unmute (reply to message)"
unmute_success: "🔊 {mention} is no longer muted."
unmute_failed: "❌ Could not remove the user's mute."
ban_no_target: "❌ Please specify who to ban.\n\n<b>Usage:</b>\n/ban @user\n/ban ID\n/ban (reply to message)"
ban_success: "🚫 {mention} has been banned."
ban_failed: "❌ Could not ban the user."
unban_no_target: "❌ Please specify whose ban to remove.\n\n<b>Usage:</b>\n/unban @user\n/unban ID"
unban_success: "✅ {mention} is no longer banned."
unban_failed: "❌ Could not remove the user's ban."
kick_no_target: "❌ Please specify who to kick from the group.\n\n<b>Usage:</b>\n/kick @user\n/kick ID\n/kick (reply to message)"
kick_success: "👢 {mention} has been kicked from the group."
kick_failed: "❌ Could not kick the user from the group."
bot_not_admin: "❌ Bot is not an admin."
user_not_admin: "❌ You don't have admin rights."
target_is_admin: "❌ Cannot mute an admin."
user_not_found: "❌ User not found in the group."
command_error: "❌ An error occurred while executing the command."
no_active_mutes: "📋 No active mutes in this group."
active_mutes_header: "🔇 <b>Active mutes:</b>\n\n"
duration_minutes: "{minutes} minutes"
duration_hours: "{hours} hours"
duration_hours_minutes: "{hours} hours {minutes} minutes"
duration_days: "{days} days"
duration_days_hours: "{days} days {hours} hours"

# ping.py
ping_checking: "🏓 Checking ping..."
ping_pong: "🏓 **Pong!**"
ping_ping: "⚡ **Ping:** `{ping_time}ms`"
ping_cpu: "💻 **CPU:** `{cpu_usage}%`"
ping_ram: "🧠 **RAM:** `{memory_usage}%`"
ping_status: "📊 **Status:** `Active`"
uptime_title: "⏰ **Bot Uptime**"
uptime_days: "📅 **Days:** `{days}`"
uptime_hours: "🕐 **Hours:** `{hours}`"
uptime_minutes: "⏱️ **Minutes:** `{minutes}`"
uptime_seconds: "⏲️ **Seconds:** `{seconds}`"
uptime_start_time: "🚀 **Start time:** `{start_time}`"
status_title: "📊 **Bot Status Information**"
status_uptime: "⏰ **Uptime:** `{uptime}`"
status_cpu: "💻 **CPU:** `{cpu_usage}%`"
status_ram: "🧠 **RAM:** `{memory_percent}% ({memory_used}GB / {memory_total}GB)`"
status_disk: "💾 **Disk:** `{disk_percent}% ({disk_used}GB / {disk_total}GB)`"
status_python: "🐍 **Python:** `{python_version}`"
status_pyrogram: "🤖 **Pyrogram:** `Active`"
status_connection: "📡 **Connection:** `Stable`"

# qrup_qeydiyyati.py
bot_added_greeting: "👋 Hello! Thank you for adding me to the group.\n\n<blockquote>Please give me message deletion rights so I can monitor the rules.</blockquote>"
bot_added_log: "✅ <b>Bot added to group!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n🔗 <b>Username:</b> @{chat_username}\n📊 <b>Status:</b> {member_status}\n⏱ <b>Date:</b> {date}\n👤 <b>Added by:</b> {added_by}"
bot_removed_log: "❌ <b>Bot {status_text} from group!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n⏱ <b>Date:</b> {date}\n👤 <b>Removed by:</b> {removed_by}"
bot_admin_removed: "⚠️ I am no longer an <b>admin</b> and cannot delete messages.\nPlease give me admin rights so I can monitor the rules 🙏"
bot_admin_removed_log: "⚠️ <b>Bot admin rights revoked!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n🔗 <b>Username:</b> @{chat_username}\n⏱ <b>Date:</b> {date}\n👤 <b>Changed by:</b> {changed_by}"
bot_delete_rights_removed: "⚠️ I can no longer <b>delete messages</b>.\nPlease restore this right so I can monitor the rules 🙏"
bot_delete_rights_removed_log: "⚠️ <b>Bot lost message deletion rights!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n🔗 <b>Username:</b> @{chat_username}\n⏱ <b>Date:</b> {date}\n👤 <b>Changed by:</b> {changed_by}"
bot_delete_rights_gained_log: "✅ <b>Bot gained message deletion rights!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n🔗 <b>Username:</b> @{chat_username}\n⏱ <b>Date:</b> {date}\n👤 <b>Changed by:</b> {changed_by}"
bot_admin_gained_log: "✅ <b>Bot became admin!</b>\n\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📛 <b>Title:</b> <b>{chat_title}</b>\n🔗 <b>Username:</b> @{chat_username}\n🗑️ <b>Message deletion rights:</b> {delete_rights}\n⏱ <b>Date:</b> {date}\n👤 <b>Changed by:</b> {changed_by}"
bot_admin_gained_no_delete: "✅ Thank you for making me an admin!\n\n<blockquote>⚠️ But you haven't given me message deletion rights. Please give me this right too so I can monitor the rules.</blockquote>"
bot_admin_gained_with_delete: "✅ Thank you for making me an admin and giving me message deletion rights!\n\n<blockquote>I will now automatically delete profanity and inappropriate words in your group.</blockquote>"
status_banned: "banned"
status_left: "left"

# report.py
report_user_not_found: "User of the replied message not found."
report_no_reason: "No reason provided"
report_usage: "Usage: /rapor @user reason or reply to message"
report_mention_user: "Please mention the user with @."
report_get_admins_error: "Could not get admins."
report_no_admins: "No admins found in this group."
report_header: "<b>🚨 New complaint received!</b>\n👤 Reporter: <a href=\"tg://user?id={reporter_id}\">{reporter_name}</a>"
report_reported_user: "\n🚫 Reported: <a href=\"tg://user?id={reported_id}\">{reported_name}</a>"
report_reported_username: "\n🚫 Reported: {reported_username}"
report_reason: "\n📝 Reason: {reason}"
report_group: "\n📍 Group: {group_title} ({group_id})"
report_date: "\n🕐 Date: {date}"
report_message_link: "\n<a href=\"{message_link}\">Reported message</a>"
report_success: "✅ Your complaint has been sent to {success_count} admins."
report_failed: "❌ Could not send complaint. Admins' private messages might be disabled."
report_admin_check_error: "Could not check admin status."
report_admin_only: "This command can only be used by admins."
report_user_not_found_cmd: "User not found."
report_user_usage: "Usage: /report @user or reply to message"
report_user_header: "<b>👤 User Report</b>\n📍 Group: {group_title}\n👤 User: <a href=\"tg://user?id={user_id}\">{user_name}</a>"
report_user_id: "\n🆔 ID: {user_id}"
report_warnings_header: "\n<b>⚠️ Warnings ({warning_count}):</b>\n"
report_warning_item: "• {date} - {reason}\n"
report_more_warnings: "... and {more_count} more warnings\n"
report_deleted_header: "\n<b>🗑 Deleted messages ({deleted_count}):</b>\n"
report_deleted_item: "• {type_name}: {count}\n"
report_no_violations: "\n✅ This user has no violation records!"
report_error: "Error occurred while preparing user report."
report_group_header: "<b>📊 Group Report (Last 30 days)</b>\n📍 Group: {group_title}\n\n"
report_top_warnings: "<b>⚠️ Most warned users:</b>\n"
report_warning_user: "{index}. <a href=\"tg://user?id={user_id}\">{user_name}</a> {username} - {count} warnings\n"
report_top_deleted: "<b>🗑 Most deleted messages:</b>\n"
report_deleted_user: "{index}. <a href=\"tg://user?id={user_id}\">{user_name}</a> {username} - {total} messages ({types_text})\n"
report_stats_header: "<b>📈 General statistics:</b>\n"
report_total_warnings: "• Total warnings: {total_warnings}\n"
report_total_deleted: "• Deleted messages: {total_deleted}\n"
report_active_users: "• Active users: {active_users}\n"
report_no_violations_30: "\n✅ No violations recorded in the last 30 days!"
report_error_general: "Error occurred while preparing report."
report_unknown_user: "Unknown user"
report_type_spam: "Spam"
report_type_vulgar: "Profanity"
report_type_ad: "Advertisement"
report_type_flood: "Flood"

# start.py
start_message: "👋 Hello {mention}!\n\n🕶️ I am Qəddar — enemy of evil, silent group guardian.\n<blockquote>\n➕ Add me to the group and give me \"Delete messages\" permission. Let everyone know: this group is now under Qəddar's control.\n</blockquote>"
new_user_log: "🆕 <b>New user</b>\n👤 <b>ID:</b> <code>{user_id}</code>\n📛 <b>Name:</b> {first_name}\n🔗 <b>Username:</b> @{username}\n📅 <b>Date:</b> {date}"
add_to_group: "➕ Add to group"
commands: "📋 Commands"
features: "⚙️ Features"
profile: "👤 My account"
developer: "👨‍💻 Developer"
languages: "🌐 Change language"
other_bots: "🤖 Our other bots"
commands_title: "<b>📋 Commands:</b>"
commands_list: "/start - Start the bot\n/noarqo - Profanity filter (on/off)\n/noarqo - 3 3 limit and minute mute\n/noarqo - 0 0 deletes vulgar messages but doesn't mute\n/antispam - Advertisement and link filter (on/off)\n/antispam - 3 3 limit and minute mute\n/help - Information about available commands\n/reload - Reload filter list\n/id - Show user information"
back_button: "🔙 Back"
features_title: "<b>⚙️ Bot's main features:</b>"
features_list: "• Automatically deletes profanity and vulgar words written in the group\n• Sends warnings for inappropriate messages\n• Protects the group's literary and clean environment\n• Admins can activate or deactivate the filter as desired\n• Profanity list can be updated automatically and manually"
developer_title: "<b>👨‍💻 About developers:</b>"
developer_info: "This bot's idea was proposed by <a href='{idea_url}'>{idea_name}</a>.\nDesign, planning and programming was implemented by <a href='{dev_url}'>{dev_name}</a>.\n\nIf you have additional questions or suggestions, don't hesitate to write!"
support_group: "💬 Support"
account_title: "<b>👤 Account information:</b>"
account_info: "<b>ID:</b> <code>{user_id}</code>\n<b>Name:</b> {first_name}\n<b>Username:</b> @{username}"
other_bots_title: "<b>🤖 Our other bots:</b>"
other_bots_button: "📢 Channel"
developer_button: "👨‍💻 Owner"
support_button: "🧑‍💻 Support"
other_bots_info: "You can use various functions by adding our additional bots to your group."
bot_not_found: "Bot information not found."

# language.py
change_language: "Choose your language:"
only_admin_change_lang: "❗ Only administrators can perform this operation."
bot_not_admin: "❗ Bot is not an administrator in the group."
language_changed: "✅ Language changed!\n\nPress /start."
language_changed_group: "✅ Group language: {language_name}"
language_change_error: "⚠️ Error occurred while changing language."
only_admin_change_lang_alert: "❗ Only administrators can change language."
change_success: "✅ Change recorded."

# yetkiyoxluyan.py
admin_test_title: "<b>[ADMIN TEST PANEL]</b>"
admin_test_user: "<b>You:</b> <code>{first_name}</code> (<code>{user_id}</code>)"
admin_test_user_status: "<b>Your status:</b> <code>{status}</code>"
admin_test_user_admin: "<b>Admin status:</b> {admin_status}"
admin_test_bot: "<b>Bot:</b> <code>{bot_name}</code> (<code>{bot_id}</code>)"
admin_test_bot_status: "<b>Bot status:</b> <code>{status}</code>"
admin_test_bot_admin: "<b>Bot admin?</b> {admin_status}"
admin_test_permissions: "<b>Bot permissions:</b>"
admin_test_delete_messages: "› Delete messages: {permission}"
admin_test_restrict_members: "› Restrict members: {permission}"
admin_test_ban_members: "› Ban members: {permission}"
admin_test_invite_users: "› Invite users: {permission}"
admin_test_pin_messages: "› Pin messages: {permission}"
admin_test_error: "⚠️ Unexpected error occurred."

# topbadboy.py
topbad_today: "📅 Today"
topbad_week: "🗓 This week"
topbad_month: "📆 This month"
topbad_all: "🕰 All time"
topbad_groups: "🌐 Groups"
topbad_users: "👥 Users"
topbad_warnings: "⚠️ Warnings"
topbad_vulgar: "🤬 Vulgar words"
topbad_close: "❌ Close"
topbad_warnings_title: "⚠️ <b>Top 10 most warned users</b>"
topbad_vulgar_title: "🤬 <b>Top 10 most vulgar word users</b>"
topbad_warning_unit: "warning"
topbad_vulgar_unit: "vulgar word"
topbad_period_today: "today"
topbad_period_week: "this week"
topbad_period_month: "this month"
topbad_period_all: "all time"
topbad_empty: "📭 No one is on the list yet."
topbad_error: "❌ An error occurred. Please try again later."
topbad_error_callback: "Error occurred!"

# statistics.py
stats_title: "📊 <b>Bot Statistics</b>"
stats_users: "👥 <b>Users:</b>"
stats_users_total: "├ Total: <code>{total}</code>"
stats_users_new_24h: "└ New in 24h: <code>{new}</code>"
stats_groups: "🏘 <b>Groups:</b>"
stats_groups_active: "├ Active: <code>{active}</code>"
stats_groups_left: "├ Left: <code>{left}</code>"
stats_groups_total: "├ Total were: <code>{total}</code>"
stats_groups_new_24h: "└ New in 24h: <code>{new}</code>"
stats_updated: "📅 <b>Updated:</b> {date} UTC"
stats_top_groups: "👥 Top groups"
stats_details: "📈 Details"
stats_refresh: "🔄 Refresh"
stats_refresh_success: "✅ Statistics updated!"
stats_no_permission: "❌ You don't have permission to perform this action."
stats_no_active_groups: "📭 No active groups found."
stats_top_groups_title: "👥 <b>Top-10 groups by members:</b>"
stats_group_members: "👥 {count} members"
stats_group_joined: "📅 Added: {date}"
stats_back_to_stats: "🔙 Back to statistics"
stats_detailed_title: "📈 <b>Detailed Statistics</b>"
stats_new_users: "👥 <b>New Users:</b>"
stats_new_groups: "🏘 <b>New Groups:</b>"
stats_left_groups: "❌ <b>Left Groups:</b>"
stats_period_day: "├ Per day: <code>{count}</code>"
stats_period_week: "├ Per week: <code>{count}</code>"
stats_period_month: "└ Per month: <code>{count}</code>"
stats_update_groups_start: "🔄 Starting to update group information..."
stats_update_complete: "✅ <b>Update completed!</b>"
stats_updated_groups: "📊 Updated groups: <code>{updated}</code>"
stats_update_errors: "❌ Errors: <code>{errors}</code>"
stats_update_time: "📅 Time: {date} UTC"
stats_error: "❌ Error getting statistics: {error}"
stats_refresh_error: "❌ Error: {error}"
stats_top_groups_error: "❌ Error: {error}"
stats_details_error: "❌ Error: {error}"
stats_update_error: "❌ Error during update: {error}"
new_group_log: "🆕 <b>Bot added to new group</b>\n📛 <b>Name:</b> {title}\n🆔 <b>ID:</b> <code>{chat_id}</code>\n👥 <b>Members:</b> {member_count}\n🔗 <b>Username:</b> @{username}\n📅 <b>Date:</b> {date}"
left_group_log: "❌ <b>Bot removed from group</b>\n📛 <b>Name:</b> {title}\n🆔 <b>ID:</b> <code>{chat_id}</code>\n📅 <b>Date:</b> {date}"


# antiflood.py
antiflood_enabled: "AntiFlood activated."
antiflood_disabled: "AntiFlood deactivated."
antiflood_status: "🛡 AntiFlood Status: {status}\nLimit: {limit} messages/{time} sec\nAction: {action}"
antiflood_usage: "Usage: /antiflood on|off or /antiflood [limit] [seconds] [delete/warn/mute]"
antiflood_set_success: "✅ AntiFlood settings updated.\nLimit: {limit} messages\nTime: {time} sec\nAction: {action}"
antiflood_set_fail: "Usage:\n/antiflood on|off\n/antiflood [limit] [seconds] [delete/warn/mute]"
flood_warning: "Flood warning"
flood_muted: "Muted for flood"
antiflood_admin_check_failed: "Failed to check admin status."
antiflood_admin_only: "This command can only be used by administrators."
antiflood_limit_range: "Limit must be between 1-50."
antiflood_time_range: "Time must be between 1-300 seconds."
antiflood_invalid_numbers: "Please enter valid numbers."
antiflood_invalid_action: "Action type must be: delete, warn or mute."
antiflood_action_names: "Delete"
antiflood_action_warn: "Warn"
antiflood_action_mute: "Mute"
antiflood_status_active: "Active"
antiflood_status_inactive: "Inactive"
flood_detected: "🚫 {user} flooded and was {action}!"
flood_user_warned: "{user} received a warning for flooding."
flood_user_muted: "{user} was muted for {duration} minutes for flooding."

# antispammer.py
antijoin_alert: |
  ⚠️ <b>SUSPICIOUS USER DETECTED</b>

  {mention} is a known spammer and has been <b>banned by NEON</b>.
  NeonFed recommends <b>banning</b> this user.
antijoin_admin_only: "⛔ Only administrators can use this command."
antijoin_usage: "Usage: <code>/antijoin on</code> or <code>/antijoin off</code>"
antijoin_enabled: "✅ Active"
antijoin_disabled: "❌ Disabled"
antijoin_status: "🛡️ Anti-Join protection: {status}"
blacklist_add_admin_only: "⛔ Only administrators can use this command."
blacklist_add_usage: "Usage: <code>/blacklist_add word</code>"
blacklist_add_empty: "❗ The word to add cannot be empty."
blacklist_add_exists: "❗ This word is already in the blacklist."
blacklist_add_success: "✅ <b>{word}</b> added to blacklist."
blacklist_del_admin_only: "⛔ Only administrators can use this command."
blacklist_del_usage: "Usage: <code>/blacklist_del word</code>"
blacklist_del_success: "🗑️ <b>{word}</b> removed from blacklist."
blacklist_del_not_found: "⚠️ This word was not found in the blacklist."
bot_spam_deleted: "🚫 Advertisement message deleted ({reason})."

# captcha.py
captcha_welcome: "Welcome!"
captcha_solve: "Please solve this math problem:"
captcha_timeout: "Time limit: {timeout} seconds"
captcha_warning: "If you don't answer, you will be permanently muted."
captcha_success: "Congratulations! Captcha passed successfully."
captcha_welcome_success: "Welcome to the group!"
captcha_failed: "User failed to pass captcha and was permanently muted."
captcha_status: "Captcha Status: {status}"
captcha_current_timeout: "Time limit: {timeout} seconds"
captcha_enabled: "Captcha activated."
captcha_disabled: "Captcha deactivated."
captcha_usage: "Usage: /captcha on|off|timeout <seconds>"
captcha_timeout_range: "Time limit must be between 30-600 seconds."
captcha_timeout_set: "Captcha time limit set to {timeout} seconds."
captcha_error: "❌ An error occurred!"
captcha_not_yours: "❌ This is not your captcha!"
captcha_expired: "⏰ Captcha time expired!"
captcha_wrong_answer: "❌ Wrong answer! Try again."
captcha_passed: "✅ Captcha passed!"
error_checking_admin: "Could not check admin status."
invalid_number: "Invalid number format."

captcha_permanent_mute: "<i>Qəddar has permanently muted this user.</i>"

# report.py
reports_title: "📊 Group Report"
reports_no_data: "No violations have been recorded in this group yet."
reports_total_violations: "Total violations: {count}"
reports_by_type: "By violation types:"
reports_top_violators: "Top violators:"
reports_recent_activity: "Recent activity (30 days):"
userreport_title: "👤 User Report: {user}"
userreport_no_data: "No information about this user."
userreport_total_violations: "Total violations: {count}"
userreport_warnings: "Warnings: {count}"
userreport_deleted_messages: "Deleted messages: {count}"
userreport_last_violation: "Last violation: {date}"
rapor_success: "✅ Complaint sent to administrators."
rapor_usage: "Usage: /rapor @user reason"
rapor_admin_notification: "🚨 New complaint:\n👤 Reporter: {reporter}\n🎯 Target: {target}\n📝 Reason: {reason}"
rapor_no_admins: "Failed to get administrators."

# antireklam.py
antireklam_enabled: "AntiReklam activated."
antireklam_disabled: "AntiReklam deactivated."
antireklam_status: "🛡 AntiReklam Status: {status}"
antireklam_usage: "Usage: /antireklam on|off"
ad_deleted: "Advertising message deleted."
bot_ad_deleted: "Bot advertisement deleted."
antireklam_userbot_added: "🤖 Assistant profile added to group.\n⚠️ Give this profile only 'Delete messages' permission."
antireklam_userbot_already_in_group: "🤖 Assistant profile is already in the group.\n⚠️ Give this profile only 'Delete messages' permission.\n\n📱 You can add the assistant automatically by pressing the button."
antireklam_userbot_failed: "⚠️ AntiReklam activated, but I couldn't add my assistant profile.\nPlease add it manually to the group by pressing the button."
antireklam_userbot_button: "➕ Add Assistant"
antireklam_bot_not_admin: "⚠️ AntiReklam activated, but I'm not an admin.\nPlease give me admin rights so I can add my assistant profile."
antireklam_bot_cannot_invite: "⚠️ AntiReklam activated, but I can't invite users.\nPlease give me 'Invite users' permission."
antireklam_bot_permission_error: "⚠️ AntiReklam activated, but I couldn't check group information.\nPlease give me admin rights."

# resetdb.py
resetdb_success: "✅ Database reset successfully!"
resetdb_fail: "❌ Error occurred while resetting database. Please try again."
resetdb_log_message: "⚠️ Database has been reset!"
resetdb_log_success: "✅ Database has been successfully reset."

# commands.py
command_start: "Start the bot"
command_noarqo: "Profanity filter"
command_antijoin: "Bans external fake accounts"
command_antispam: "Spam-Link filter"
command_chatbot: "Artificial intelligence function"
command_help: "Available commands"
command_reload: "Reload filter"
command_id: "Show ID"
command_economy: "Economy system"
command_news: "Activity reports"

# reload.py
reload_group_only: "This command only works in groups."
reload_admin_only: "Only group administrators can use this command."
reload_bot_not_admin: "❌ Bot is not admin! Please give admin rights."
reload_title: "Filter Reload Report"
reload_bot_permissions: "Bot Permissions"
reload_userbot_status: "Userbot Permissions"
reload_filters_status: "Filters Status"
reload_time: "Reload Time"
reload_error: "❌ Reload error: {error}"
commands_set_success: "✅ Commands set successfully"
commands_set_fail: "❌ Could not set commands: {error}"

# games - kagizqaycidas.py
game_paper: "📄 Paper"
game_scissors: "✂️ Scissors"
game_rock: "🪨 Rock"
game_new_request: "New game request."
game_active_exists: "✌️ There's already an active game in this group! Join it or complete it."
game_join: "Join"
game_new_started: "✌️ New game started! Press 'Join' button to join the game."
game_not_found: "Game not found."
game_already_joined: "You're already in the game."
game_joined_waiting: "You joined the game. Now waiting for the second player."
game_started: "✌️ Game started!\n\n1st player: {p1_name} ❌\n2nd player: {p2_name} ❌\n\nPlease make your choice:"
game_started_callback: "Game started!"
game_full: "Game is already full."
game_not_started: "Game hasn't started yet."
game_not_participant: "You're not a participant in this game."
game_already_chosen: "You've already made your choice."
game_choice_recorded: "Your choice recorded: {emoji}"
game_tie: "Tie!"
game_winner: "Winner: {winner_name}"
game_results: "✌️ Results:\n{player1_name}: {p1_emoji}\n{player2_name}: {p2_emoji}\n\n{result}"
game_rematch: "🔁 Rematch"
game_new_game: "🎮 New game"
game_rematch_not_possible: "Rematch not possible."
game_rematch_only_previous: "Only previous players can start a rematch."
game_rematch_started: "🔁 Rematch started!\n\n1st player: {p1_name} ❌\n2nd player: {p2_name} ❌\n\nPlease make your choice:"
game_rematch_callback: "Rematch started!"
game_stats_categories: "📊 Select statistics category:"
game_top_groups: "🏆 Top Groups"
game_top_global: "🌍 Global Top"
game_top_groups_title: "🏆 Best players by groups:\n\n"
game_top_global_title: "🌍 Global best players:\n\n"
game_group_stats: "Group: {chat_name}\n   👤 Player: {user_mention}\n   ✅ Wins: {wins} | ❌ Losses: {losses}\n\n"
game_global_stats: "{rank}. {user_mention} — ✅ {wins} | ❌ {losses}\n"
game_my_stats_title: "📊 Your statistics — {name}\n\n"
game_my_stats_group: "🏠 This group:\n   ✅ Wins: {wins}\n   ❌ Losses: {losses}\n   🎮 Games: {games}\n   ⚖️ Balance: {score}\n   🏅 Rank: {rank}\n\n"
game_my_stats_global: "🌍 Global:\n   ✅ Wins: {wins}\n   ❌ Losses: {losses}\n   🎮 Games: {games}\n   ⚖️ Balance: {score}\n   🏅 Rank: {rank}"
game_rules_title: "Paper - Scissors - Rock | Game Rules"
game_rules_start: "🕹 To start the game: /kagizqaycidas"
game_rules_join: "The second player joins by pressing the 'Join' button."
game_rules_how: "🧠 Game rules:"
game_rules_choices: "Both players choose one of the following options:"
game_rules_win: "🏆 Winning conditions:"
game_rules_win_paper: "- Paper beats Rock (Paper covers Rock)"
game_rules_win_rock: "- Rock beats Scissors (Rock breaks Scissors)"
game_rules_win_scissors: "- Scissors beats Paper (Scissors cut Paper)"
game_rules_bot: "🤖 Bot shows results:"
game_rules_bot_desc: "Bot compares both choices and determines the winner."
game_rules_tie: "If both players choose the same option, it's a tie."
game_rules_after: "🔄 After the game ends:"
game_rules_rematch: "You can click \"🔁 Rematch\" for a rematch."
game_rules_new: "Click \"🎮 New game\" to start a new game."
game_rules_stats: "📊 To see statistics:"
game_rules_stats_desc: "/top — List of top players by group and global."

# games - love_meter.py
love_test_title: "Love Test 💘"
love_percentage: "Love Percentage: {score}%"
love_attempt: "This is your {attempt} attempt."
love_user_not_found: "User not found. Command: /love @username or reply to someone."
love_history_title: "Love history for {name}:"
love_history_not_found: "History not found."
love_history_entry: "<b>{name1}</b> + <b>{name2}</b>\nLove Percentage: <b>{score}%</b>\n{bar}\nAttempt count: <i>{count}</i>"
love_secret_title: "Secret Love Test 💘"
love_secret_usage: "Usage: /yasakelma <@username>\nThis command sends the result secretly only to you."
love_secret_blocked: "Sorry, this user has blocked you and you can't send them a test."
love_secret_not_started: "{name} hasn't started the bot yet. Please ask them to write /start."
love_secret_user_not_found: "Could not find user."
love_reset_usage: "Usage: /sifirla @username or ID"
love_reset_success: "Love history with {mention} has been reset."
love_reset_not_found: "History not found or already deleted."
love_reset_user_not_found: "Could not find user. Enter correct tag or ID."
love_block_usage: "Usage: /blokla @username or ID"
love_block_success: "{mention} has been blocked."
love_block_user_not_found: "Could not find user. Enter correct tag or ID."
love_unblock_usage: "Usage: /blokdan_cixar @username or ID"
love_unblock_success: "{mention} has been unblocked."
love_unblock_user_not_found: "Could not find user. Enter correct tag or ID."

# settings.py
settings_title: "Group Settings"
settings_description: "Use the buttons below to manage modules:"
all_modules_status: "All Modules Status"
enabled: "Enabled"
disabled: "Disabled"
enable: "Enable"
disable: "Disable"
configure: "Configure"
back: "Back"
antispam_title: "AntiSpam"
antireklam_title: "AntiAds" 
antivulgar_title: "AntiProfanity"
antiflood_title: "AntiFlood"
antispammer_title: "AntiSpammer"
captcha_title: "Captcha"
view_all_status: "All statuses"

# Settings module translations
settings_title: "Group Settings"
settings_description: "Use the buttons below to manage modules:"
all_modules_status: "All Modules Status"
module_settings_title: "Settings"
module_description_antispam: "This module automatically deletes spam messages."
module_description_antireklam: "This module automatically deletes advertisement messages."
module_description_antivulgar: "This module automatically deletes profanity messages."
module_description_antiflood: "This module automatically deletes flood messages."
module_description_antispammer: "This module automatically detects spam bots."
module_description_captcha: "This module requires captcha for new members."
antispammer_always_active: "always active"
configure_with_buttons: "Configure using the buttons below:"
config_not_available: "Configuration not available"
antispammer_auto_works: "AntiSpammer works automatically and requires no additional configuration."
antispammer_detects: "This module automatically detects spam bots and suspicious accounts."

# Config texts
config_limit: "Limit"
config_time: "Time"
config_action: "Action"
config_mute: "Mute"
config_timeout: "Timeout"
config_messages: "messages"
config_seconds: "seconds"
config_warnings: "warnings"
config_math_problem: "Mathematical problem for new members"
config_works_with_userbot: "Works with userbot"
config_auto_deletes_ads: "Automatically deletes advertisement links"

# modules/economy/profile.py
economy_user_data_error: "Error getting user data"
economy_not_setup: "Economy system is not configured in this group"
economy_achievements: "Achievements"
economy_back: "Back"
economy_profile_title: "User Profile"
economy_finances: "Finances"
economy_total_earned: "Total Earned"
economy_activity_stats: "Activity Statistics"
economy_days_in_group: "Days in Group"
economy_daily_earnings: "Average Daily Earnings"
economy_achievements_count: "Achievements"
economy_recent_achievements: "Recent Achievements"
economy_no_achievements: "No achievements yet"
economy_profile_error: "Error occurred while loading profile"

# modules/economy/economy.py
economy_title: "Economy System"
economy_convert: "Conversion"
economy_daily_bonus: "Daily Bonus"
economy_leaderboard: "Leaderboard"
economy_charts: "Charts"
economy_profile: "Profile"
economy_settings: "Settings"
economy_neon_coins: "Neon Coins"
economy_your_balance: "Your Balance"
economy_group_statistics: "Group statistics"
economy_total_users: "Participants"
economy_group_total: "Group total balance"
economy_total_earned_short: "Earned"
economy_exchange_rate: "Exchange Rate"
economy_admin_only: "Only administrators can configure the economy"
economy_create_currency: "Create Currency"
economy_info: "Information"
economy_setup_title: "Economy System Setup"
economy_setup_description: "The economy system is not yet configured for this group. Create a currency to start using economic functions"
economy_features: "Features"
economy_create_group_currency: "Creating your own group currency"
economy_daily_bonuses: "Daily Bonuses"
economy_achievements_system: "Achievements System"
economy_currency_conversion: "Currency Conversion"
economy_conversion_error: "Error showing conversion menu"
economy_conversion: "Currency Conversion"
economy_current_rate: "Current Rate"
economy_choose_conversion: "Choose conversion direction"
economy_all: "All"
economy_convert_to_nc: "Conversion"
economy_exchange_rate_short: "Rate"
economy_select_amount: "Select amount for conversion"
economy_convert_to_group: "Conversion"
economy_top_10_earners: "Top-10 by earnings"
economy_no_users: "No users in leaderboard yet"
economy_update_rate: "Update Rate"
economy_group_currency: "Group Currency"
economy_rate_to_nc: "Rate to NC"
economy_group_activity: "Group Activity"
economy_last_update: "Last Update"
economy_edit_currency_title: "Currency Editing"
economy_important: "Important"
economy_currency_cannot_change: "Currency cannot be changed after creation"
economy_to_change_currency: "To change currency you need to"
economy_delete_current: "Delete current currency"
economy_create_new: "Create new"
economy_will_delete_data: "This action will delete all group currency data"
economy_confirm_delete: "Confirm Deletion"
economy_cancel_delete: "Cancel"
economy_delete_currency_title: "Currency Deletion"
economy_warning: "WARNING"
economy_this_action: "This action"
economy_delete_currency_forever: "Will delete group currency forever"
economy_delete_user_balances: "Will delete all user balance data"
economy_delete_transaction_history: "Will delete transaction history"
economy_delete_user_achievements: "Will delete user achievements"
economy_action_irreversible: "This action is irreversible"
economy_confirm_delete_question: "Are you sure you want to delete the currency"
economy_currency_deleted: "Currency successfully deleted"
economy_info_title: "Economy System Information"
economy_main_features: "Main Features"
economy_max_4_symbols: "maximum 4 symbols"
economy_auto_calculated: "Automatically calculated based on group activity"
economy_cannot_be_expensive: "Cannot be more expensive than NC"
economy_updates_daily: "Updates daily"
economy_how_to_earn: "How to earn"
economy_complete_achievements: "Complete achievements"
economy_participate_games: "Participate in games and events"
economy_wrong_chat_error: "Error: message from different chat"
economy_invalid_amount: "Invalid amount"
economy_amount_zero_error: "Amount must be greater than 0"
economy_insufficient_funds: "Insufficient funds"
economy_insufficient_nc: "Insufficient NC"
economy_converted: "Converted"
economy_conversion_success_menu_error: "Conversion completed, but failed to update menu"
economy_conversion_failed: "Conversion error"
economy_general_error: "An error occurred"

# modules/economy/daily_bonus.py
economy_claim_bonus: "Claim Bonus"
economy_daily_bonus_title: "Daily Bonus"
economy_today_bonus: "Today's Bonus"
economy_how_to_increase: "How to increase bonus"
economy_be_active: "Be active in the group"
economy_participate: "Participate in discussions"
economy_complete_achievements: "Complete achievements"
economy_current_balance: "Your current balance"
economy_click_button_bonus: "Click the button to get bonus"
economy_next_bonus_in: "Next bonus in"
economy_bonus_hours: "h"
economy_bonus_minutes: "m"
economy_last_bonus_short: "Last bonus"
economy_come_back_tomorrow: "Come back tomorrow for new bonus"
economy_welcome_economy: "Welcome to the economy system"
economy_first_bonus: "Your first bonus"
economy_get_first_bonus: "Get your first bonus"
economy_bonus_already_claimed: "You already claimed bonus today"
economy_bonus_claimed: "You received {amount:,} units of group currency"
economy_error_occurred: "An error occurred"

# modules/economy/currency.py
economy_edit_currency: "Edit Currency"
economy_delete_currency: "Delete Currency"
economy_currency_settings: "Currency Settings"
economy_current_settings: "Current Settings"
economy_currency_name: "Currency Name"
economy_currency_symbol: "Currency Symbol"
economy_exchange_rate_short: "Rate"
economy_activity_score: "Activity Score"
economy_auto_rate_update: "Automatic rate update"
economy_rate_updates_daily: "Rate updates daily based on group activity"
economy_create_new_currency: "Create New Currency"
economy_create_currency_title: "Group Currency Creation"
economy_requirements: "Requirements"
economy_currency_name_requirements: "Currency name: maximum 10 characters"
economy_currency_symbol_requirements: "Currency symbol: maximum 4 characters"
economy_admin_only_create: "Only administrators can create currency"
economy_examples: "Examples"
economy_important: "Important"
economy_currency_one_time: "Currency is created once and cannot be changed"
economy_click_button_create: "Click button to create currency"
economy_currency_already_exists: "Currency already exists for this group"
economy_currency_name_validation: "Currency name must be 1-10 characters"
economy_currency_symbol_validation: "Currency symbol must be 1-4 characters"
economy_currency_symbol_format: "Currency symbol can only contain letters and numbers"
economy_currency_created: "Currency '{name}' ({symbol}) successfully created"
economy_currency_creation_error: "Error creating currency"
economy_rate_update_error: "Permission check error"
economy_currency_not_created: "Currency not created for this group"
economy_rate_updated: "Rate updated: 1 {symbol} = {rate:.4f} NC"
economy_create_new_currency_form: "Currency Creation Form"
economy_currency_creation_format: "To create currency send message in format"
economy_currency_deleted: "Currency successfully deleted"
economy_currency_deletion_error: "Error deleting currency"
economy_create_currency_usage: "Usage: /create_currency <name> <symbol>"

# modules/economy/achievements.py
economy_achievements_title: "Achievements"


# modules/economy/achievements.py - Achievements System
achievement_progress: "Progress"
achievement_earned: "Earned achievements"
achievement_available: "Available achievements"
achievement_reward: "Reward"
achievement_new: "New achievement"
achievement_congratulations: "Congratulations, {username}"

# === BASIC ACHIEVEMENTS ===
achievement_first_bonus: "First bonus"
achievement_first_bonus_desc: "Get your first daily bonus"
achievement_first_conversion: "First conversion"
achievement_first_conversion_desc: "Perform your first currency conversion"

# === DAILY BONUS STREAKS ===
achievement_week_streak: "Week streak"
achievement_week_streak_desc: "Get daily bonuses for 7 days in a row"
achievement_month_streak: "Month streak"
achievement_month_streak_desc: "Get daily bonuses for 30 days in a row"
achievement_year_streak: "Year streak"
achievement_year_streak_desc: "Get daily bonuses for 365 days in a row"

# === WEALTH AND SAVINGS ===
achievement_rich_user: "Rich user"
achievement_rich_user_desc: "Accumulate 1000 units of group currency"
achievement_millionaire: "Millionaire"
achievement_millionaire_desc: "Accumulate 1,000,000 units of group currency"
achievement_billionaire: "Billionaire"
achievement_billionaire_desc: "Accumulate 1,000,000,000 units of group currency"
achievement_neon_collector: "Neon collector"
achievement_neon_collector_desc: "Accumulate 500 Neon Coins"
achievement_neon_master: "Neon master"
achievement_neon_master_desc: "Accumulate 10,000 Neon Coins"

# === ACTIVITY AND EARNINGS ===
achievement_active_member: "Active member"
achievement_active_member_desc: "Earn 5000 units of group currency"
achievement_super_earner: "Super earner"
achievement_super_earner_desc: "Earn 50,000 units of group currency"
achievement_money_magnet: "Money magnet"
achievement_money_magnet_desc: "Earn 100,000 units of group currency"

# === CONVERSIONS ===
achievement_conversion_master: "Conversion master"
achievement_conversion_master_desc: "Perform 10 currency conversions"
achievement_currency_trader: "Currency trader"
achievement_currency_trader_desc: "Perform 50 currency conversions"

# === RANKINGS AND COMPETITIONS ===
achievement_top_earner: "Top earner"
achievement_top_earner_desc: "Take first place in group leaderboard"
achievement_top_3: "Top 3"
achievement_top_3_desc: "Take a place in top-3 of group leaderboard"
achievement_top_10: "Top 10"
achievement_top_10_desc: "Take a place in top-10 of group leaderboard"
achievement_leaderboard_legend: "Leaderboard legend"
achievement_leaderboard_legend_desc: "Become first in leaderboard with earnings over 1,000,000"

# === SPECIAL ACHIEVEMENTS ===
achievement_early_bird: "Early bird"
achievement_early_bird_desc: "Get daily bonus between 6:00 and 10:00 AM"
achievement_night_owl: "Night owl"
achievement_night_owl_desc: "Get daily bonus between 10:00 PM and 2:00 AM"
achievement_lucky_streak: "Lucky streak"
achievement_lucky_streak_desc: "Get a random achievement (10% chance)"
achievement_persistent: "Persistent"
achievement_persistent_desc: "Get daily bonuses for 100 days in a row"

# === MASTERY ===
achievement_achievement_hunter: "Achievement hunter"
achievement_achievement_hunter_desc: "Earn 10 achievements"
achievement_completionist: "Completionist"
achievement_completionist_desc: "Earn all available achievements"
achievement_economy_master: "Economy master"
achievement_economy_master_desc: "Meet all conditions: 100,000 group currency, 1,000 NC, 500,000 earned, 25 conversions, 14-day streak"

# === TEMPORAL ACHIEVEMENTS ===
achievement_daily_warrior: "Daily warrior"
achievement_daily_warrior_desc: "Get daily bonuses for 7 days in a row"
achievement_weekly_champion: "Weekly champion"
achievement_weekly_champion_desc: "Become the best earner of the week"
achievement_monthly_legend: "Monthly legend"
achievement_monthly_legend_desc: "Become the best earner of the month"

# === ADDITIONAL ECONOMY TRANSLATIONS ===
economy_currency_settings: "Currency Settings"
economy_current_settings: "Current Settings"
economy_edit_currency: "Edit Currency"
economy_delete_currency: "Delete Currency"
economy_create_new_currency: "Create New Currency"
economy_create_currency_title: "Group Currency Creation"
economy_requirements: "Requirements"
economy_currency_already_exists: "Currency already exists for this group"
economy_currency_name_validation: "Currency name must be 1-10 characters"
economy_currency_symbol_validation: "Currency symbol must be 1-4 characters"
economy_currency_symbol_format: "Currency symbol can only contain letters and numbers"
economy_currency_created: "Currency '{name}' ({symbol}) created successfully!"
economy_currency_creation_error: "Error creating currency"
economy_rate_update_error: "Error checking permissions"
economy_currency_not_created: "Currency not created for this group"
economy_rate_updated: "Rate updated: 1 {symbol} = {rate:.4f} NC"
economy_create_new_currency_form: "Currency Creation Form"
economy_currency_creation_format: "To create currency, send a message in format:"
economy_currency_creation_example: "Example: /create_currency Dollar USD"
economy_currency_deleted: "Currency deleted successfully"
economy_currency_deletion_error: "Error deleting currency"
economy_create_currency_usage: "Usage: /create_currency <name> <symbol>"
economy_profile_title: "User Profile"
economy_no_achievements: "No achievements yet"
economy_daily_bonus_title: "Daily Bonus"
economy_claim_bonus: "Claim Bonus"
economy_today_bonus: "Today's Bonus"
economy_next_bonus_in: "Next bonus in"
economy_welcome_economy: "Welcome to the economy system!"
economy_bonus_already_claimed: "You already claimed bonus today"
economy_bonus_claimed: "You received {amount:,} units of group currency!"
economy_error_occurred: "An error occurred!"
economy_leaderboard: "User Leaderboard"
economy_top_10_earners: "Top-10 by earnings"
economy_no_users: "No users in leaderboard yet"
economy_settings: "Economy Settings"
economy_group_currency: "Group Currency"
economy_update_rate: "Update Rate"
economy_last_updated: "Last Updated"
economy_activity_score: "Activity Score"
economy_exchange_rate: "Exchange Rate"
economy_edit_currency_title: "Currency Editing"
economy_currency_edit_form: "Currency Edit Form"
economy_currency_edit_usage: "To edit currency, send a message in format:"
economy_currency_edit_example: "Example: /edit_currency NewName NEW"

# === PROFILE TRANSLATIONS ===
economy_profile_stats: "Statistics"
economy_total_earned: "Total Earned"
economy_last_bonus: "Last Bonus"
economy_never: "Never"
economy_achievements_count: "Achievements"

# === DAILY BONUS TRANSLATIONS ===
economy_bonus_hours: "h"
economy_bonus_minutes: "m"

# === MAIN ECONOMY TRANSLATIONS ===
economy_currency_name: "Currency Name"
economy_currency_symbol: "Currency Symbol"
economy_currency_balance: "Currency Balance"
economy_neon_coins: "Neon Coins"
economy_total_earned_short: "Earned"
economy_last_bonus_short: "Last Bonus"
economy_exchange_rate_short: "Rate"
economy_how_to_increase: "How to increase bonus"
economy_be_active: "Be active in the group"
economy_participate: "Participate in discussions"
economy_complete_achievements: "Complete achievements"
economy_current_balance: "Your current balance"
economy_first_bonus: "Your first bonus"
economy_features: "Features"
economy_daily_bonuses: "Daily bonuses"
economy_currency_conversion: "Currency conversion"
economy_achievements_system: "Achievements system"
economy_leaderboard_competition: "Competitive leaderboard"
economy_user_profile: "User profile"
economy_currency_management: "Currency management"

# === ADDITIONAL DAILY BONUS TRANSLATIONS ===
economy_click_button_bonus: "Click the button to get the bonus!"
economy_come_back_tomorrow: "Come back tomorrow for a new bonus!"
economy_get_first_bonus: "Get your first bonus!"

# === ADDITIONAL CURRENCY TRANSLATIONS ===
economy_auto_rate_update: "Automatic rate update"
economy_rate_updates_daily: "Rate updates daily based on group activity."
economy_currency_name_requirements: "Currency name: maximum 10 characters"
economy_currency_symbol_requirements: "Currency symbol: maximum 4 characters"
economy_admin_only_create: "Only administrators can create currency"
economy_examples: "Examples"
economy_important: "Important"
economy_currency_one_time: "Currency is created once and cannot be changed!"
economy_click_button_create: "Click the button to create currency."

# === ADDITIONAL ECONOMY TRANSLATIONS ===
economy_your_balance: "Your balance"
economy_create_group_currency: "Creating group's own currency"
economy_current_rate: "Current rate"
economy_choose_conversion: "Choose conversion direction"
economy_send_message_convert: "To convert, send a message"
economy_example: "Example"

# === ADDITIONAL PROFILE TRANSLATIONS ===
economy_finances: "Finances"
economy_days_in_group: "Days in group"
economy_daily_earnings: "Average daily earnings"
economy_recent_achievements: "Recent achievements"

# === ADDITIONAL ECONOMY.PY TRANSLATIONS ===
economy_group_currency: "Group currency"
economy_rate_to_nc: "Rate to NC"
economy_group_activity: "Group activity"
economy_last_update: "Last update"
economy_currency_cannot_change: "Currency cannot be changed after creation!"
economy_to_change_currency: "To change currency you need to"
economy_delete_current: "Delete current currency"
economy_create_new: "Create new currency"
economy_will_delete_data: "This action will delete all group currency data."
economy_warning: "WARNING!"
economy_this_action: "This action"
economy_delete_currency_forever: "Will delete group currency forever"
economy_delete_user_balances: "Will delete all user balance data"
economy_delete_transaction_history: "Will delete transaction history"
economy_delete_user_achievements: "Will delete user achievements"
economy_action_irreversible: "This action is irreversible!"
economy_confirm_delete_question: "Are you sure you want to delete the currency?"
economy_main_features: "Main features"
economy_max_4_symbols: "maximum 4 symbols"
economy_auto_calculated: "Automatically calculated based on group activity"
economy_cannot_be_expensive: "Cannot be more expensive than NC"
economy_updates_daily: "Updates daily"
economy_how_to_earn: "How to earn"
economy_participate_games: "Participate in games and events"

# === NEW TRANSLATIONS FOR ECONOMY.PY LOCALIZATION ===
economy_convert_to_nc: "Conversion"
economy_convert_to_group: "Conversion"
economy_select_amount: "Select amount for conversion"
economy_all: "All"
economy_conversion_error: "Error showing conversion menu"
economy_wrong_chat_error: "Error: message from another chat"
economy_not_setup: "Currency system not configured"
economy_invalid_amount: "Invalid amount"
economy_amount_zero_error: "Amount must be greater than 0"
economy_insufficient_funds: "Insufficient funds"
economy_insufficient_nc: "Insufficient NC"
economy_converted: "Converted"
economy_conversion_failed: "Conversion error"
economy_conversion_success_menu_error: "Conversion completed, but failed to update menu"
economy_general_error: "An error occurred"

# botversion/version.py - Simple Version Module
version_title: "Version Information"
version_changelog: "Changelog"
version_check_updates: "Check Updates"
version_back: "Back"
version_changelog_title: "Changelog"
version_updates_title: "Check Updates"

# === REPORT SYSTEM TRANSLATIONS ===
# Main report functions
news_title: "📊 Activity Report"
news_daily: "Daily Report"
news_weekly: "Weekly Report"
news_monthly: "Monthly Report"
news_yearly: "Yearly Report"
news_enabled: "Automatic reports are enabled"
news_disabled: "Automatic reports are disabled"
news_status: "Report Status"
news_toggle: "Toggle Reports"

# Report structure
report_title: "REPORT"
report_activity: "Activity"
report_messages: "Messages"
report_participants: "Participants"
report_new_members: "New Members"
report_left_members: "Left Members"
report_peak_time: "Peak Time"
report_most_active_day: "Most Active Day"
report_achievements: "Achievements"

# Top active users
report_top_active: "Top Active Users"
report_top_active_title: "Top-10 Most Active Users"
report_messages_count: "messages"
report_percentage: "percent"

# Time analysis
report_time_analysis: "Time Analysis"
report_by_days: "By Days"
report_by_hours: "By Hours"
report_peak_hour: "Peak Hour"
report_most_active_day_name: "Most Active Day"

# Achievements
report_achievements_title: "Weekly Achievements"
report_most_helpful: "Most Helpful"
report_most_funny: "Most Funny"
report_best_newcomer: "Best Newcomer"
report_chatterbox: "Chatterbox"
report_helper: "Helper"

# Detailed statistics
report_detailed_stats: "Detailed Statistics"
report_comparison: "Comparison with Previous"
report_settings: "Settings"

# General messages
report_enabled_success: "Automatic reports enabled"
report_disabled_success: "Automatic reports disabled"
report_admin_only: "This command can only be used by administrators"
report_no_data: "No data available for report"
report_back: "Back to Report"
report_generate: "Generate Report"
report_loading: "Generating report..."

# Time formats
report_period_daily: "daily"
report_period_weekly: "weekly"
report_period_monthly: "monthly"
report_period_yearly: "yearly"
report_from_to: "{start_date} - {end_date}"

# Change indicators
report_increase: "increase"
report_decrease: "decrease"
report_no_change: "no change"
report_change_percent: "{percent}% {direction}"

# Day names
day_monday: "Monday"
day_tuesday: "Tuesday"
day_wednesday: "Wednesday"
day_thursday: "Thursday"
day_friday: "Friday"
day_saturday: "Saturday"
day_sunday: "Sunday"